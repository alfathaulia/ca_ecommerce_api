// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/alfathaulia/ca_ecommerce_api/domain"
	mock "github.com/stretchr/testify/mock"
)

// ShippingAddressRepository is an autogenerated mock type for the ShippingAddressRepository type
type ShippingAddressRepository struct {
	mock.Mock
}

// Fetch provides a mock function with given fields: ctx, cursor, id
func (_m *ShippingAddressRepository) Fetch(ctx context.Context, cursor string, id int) ([]domain.ShippingAddress, string, error) {
	ret := _m.Called(ctx, cursor, id)

	var r0 []domain.ShippingAddress
	if rf, ok := ret.Get(0).(func(context.Context, string, int) []domain.ShippingAddress); ok {
		r0 = rf(ctx, cursor, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.ShippingAddress)
		}
	}

	var r1 string
	if rf, ok := ret.Get(1).(func(context.Context, string, int) string); ok {
		r1 = rf(ctx, cursor, id)
	} else {
		r1 = ret.Get(1).(string)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, string, int) error); ok {
		r2 = rf(ctx, cursor, id)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetByID provides a mock function with given fields: ctx, id
func (_m *ShippingAddressRepository) GetByID(ctx context.Context, id int64) (domain.ShippingAddress, error) {
	ret := _m.Called(ctx, id)

	var r0 domain.ShippingAddress
	if rf, ok := ret.Get(0).(func(context.Context, int64) domain.ShippingAddress); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(domain.ShippingAddress)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int64) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
